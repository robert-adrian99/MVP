//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfMVVMAgendaEF.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class Agenda2015Entities : DbContext
    {
        public Agenda2015Entities()
            : base("name=Agenda2015Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<persoane> persoanes { get; set; }
        public DbSet<telefoane> telefoanes { get; set; }
    
        public virtual int AddPerson(string nume, string adresa, ObjectParameter idPersoana)
        {
            var numeParameter = nume != null ?
                new ObjectParameter("nume", nume) :
                new ObjectParameter("nume", typeof(string));
    
            var adresaParameter = adresa != null ?
                new ObjectParameter("adresa", adresa) :
                new ObjectParameter("adresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddPerson", numeParameter, adresaParameter, idPersoana);
        }
    
        public virtual int AddPerson2(string n, string a)
        {
            var nParameter = n != null ?
                new ObjectParameter("n", n) :
                new ObjectParameter("n", typeof(string));
    
            var aParameter = a != null ?
                new ObjectParameter("a", a) :
                new ObjectParameter("a", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddPerson2", nParameter, aParameter);
        }
    
        public virtual int AddPhoneForPerson(Nullable<int> idPersoana, string numarTelefon, string descriere, ObjectParameter idTelefon)
        {
            var idPersoanaParameter = idPersoana.HasValue ?
                new ObjectParameter("idPersoana", idPersoana) :
                new ObjectParameter("idPersoana", typeof(int));
    
            var numarTelefonParameter = numarTelefon != null ?
                new ObjectParameter("numarTelefon", numarTelefon) :
                new ObjectParameter("numarTelefon", typeof(string));
    
            var descriereParameter = descriere != null ?
                new ObjectParameter("descriere", descriere) :
                new ObjectParameter("descriere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddPhoneForPerson", idPersoanaParameter, numarTelefonParameter, descriereParameter, idTelefon);
        }
    
        public virtual int AddPhoneForPerson2(Nullable<int> idPersoana, string numarTelefon, string descriere)
        {
            var idPersoanaParameter = idPersoana.HasValue ?
                new ObjectParameter("idPersoana", idPersoana) :
                new ObjectParameter("idPersoana", typeof(int));
    
            var numarTelefonParameter = numarTelefon != null ?
                new ObjectParameter("numarTelefon", numarTelefon) :
                new ObjectParameter("numarTelefon", typeof(string));
    
            var descriereParameter = descriere != null ?
                new ObjectParameter("descriere", descriere) :
                new ObjectParameter("descriere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddPhoneForPerson2", idPersoanaParameter, numarTelefonParameter, descriereParameter);
        }
    
        public virtual int DeletePerson(Nullable<int> idPersoana)
        {
            var idPersoanaParameter = idPersoana.HasValue ?
                new ObjectParameter("idPersoana", idPersoana) :
                new ObjectParameter("idPersoana", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePerson", idPersoanaParameter);
        }
    
        public virtual int DeletePhone(Nullable<int> idTelefon)
        {
            var idTelefonParameter = idTelefon.HasValue ?
                new ObjectParameter("idTelefon", idTelefon) :
                new ObjectParameter("idTelefon", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePhone", idTelefonParameter);
        }
    
        public virtual ObjectResult<GetAllPersons_Result> GetAllPersons()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPersons_Result>("GetAllPersons");
        }
    
        public virtual ObjectResult<GetAllPersonsWithNoPhone_Result> GetAllPersonsWithNoPhone()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPersonsWithNoPhone_Result>("GetAllPersonsWithNoPhone");
        }
    
        public virtual ObjectResult<GetPhonesForPerson_Result> GetPhonesForPerson(Nullable<int> idPersoana)
        {
            var idPersoanaParameter = idPersoana.HasValue ?
                new ObjectParameter("idPersoana", idPersoana) :
                new ObjectParameter("idPersoana", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPhonesForPerson_Result>("GetPhonesForPerson", idPersoanaParameter);
        }
    
        public virtual int ModifyPerson(Nullable<int> idPersoana, string nume, string adresa)
        {
            var idPersoanaParameter = idPersoana.HasValue ?
                new ObjectParameter("idPersoana", idPersoana) :
                new ObjectParameter("idPersoana", typeof(int));
    
            var numeParameter = nume != null ?
                new ObjectParameter("nume", nume) :
                new ObjectParameter("nume", typeof(string));
    
            var adresaParameter = adresa != null ?
                new ObjectParameter("adresa", adresa) :
                new ObjectParameter("adresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModifyPerson", idPersoanaParameter, numeParameter, adresaParameter);
        }
    
        public virtual int ModifyPhone(Nullable<int> idPersoana, string numarTelefon, string descriere, Nullable<int> idTelefon)
        {
            var idPersoanaParameter = idPersoana.HasValue ?
                new ObjectParameter("idPersoana", idPersoana) :
                new ObjectParameter("idPersoana", typeof(int));
    
            var numarTelefonParameter = numarTelefon != null ?
                new ObjectParameter("numarTelefon", numarTelefon) :
                new ObjectParameter("numarTelefon", typeof(string));
    
            var descriereParameter = descriere != null ?
                new ObjectParameter("descriere", descriere) :
                new ObjectParameter("descriere", typeof(string));
    
            var idTelefonParameter = idTelefon.HasValue ?
                new ObjectParameter("idTelefon", idTelefon) :
                new ObjectParameter("idTelefon", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModifyPhone", idPersoanaParameter, numarTelefonParameter, descriereParameter, idTelefonParameter);
        }
    }
}
